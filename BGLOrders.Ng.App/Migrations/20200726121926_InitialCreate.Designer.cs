// <auto-generated />
using System;
using BGLOrderApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BGLOrderApp.Migrations
{
    [DbContext(typeof(OrdersDbContext))]
    [Migration("20200726121926_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BGLOrderApp.Models.Data.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Item 1 Description",
                            Name = "Item 1",
                            Price = 10.99m,
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            Description = "Item 2 Description",
                            Name = "Item 2",
                            Price = 10.99m,
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            Description = "Item 3 Description",
                            Name = "Item 3",
                            Price = 10.99m,
                            Status = 0
                        },
                        new
                        {
                            Id = 4,
                            Description = "Item 4 Description",
                            Name = "Item 4",
                            Price = 10.99m,
                            Status = 1
                        },
                        new
                        {
                            Id = 5,
                            Description = "Item 5 Description",
                            Name = "Item 5",
                            Price = 10.99m,
                            Status = 0
                        },
                        new
                        {
                            Id = 6,
                            Description = "Item 6 Description",
                            Name = "Item 6",
                            Price = 10.99m,
                            Status = 1
                        },
                        new
                        {
                            Id = 7,
                            Description = "Item 7 Description",
                            Name = "Item 7",
                            Price = 10.99m,
                            Status = 0
                        },
                        new
                        {
                            Id = 8,
                            Description = "Item 8 Description",
                            Name = "Item 8",
                            Price = 10.99m,
                            Status = 2
                        },
                        new
                        {
                            Id = 9,
                            Description = "Item 9 Description",
                            Name = "Item 9",
                            Price = 10.99m,
                            Status = 0
                        });
                });

            modelBuilder.Entity("BGLOrderApp.Models.Data.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BGLOrderApp.Models.Data.OrderItem", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("ItemQuantity")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "ItemId");

                    b.HasIndex("ItemId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("BGLOrderApp.Models.Data.OrderItem", b =>
                {
                    b.HasOne("BGLOrderApp.Models.Data.Item", "Item")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BGLOrderApp.Models.Data.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
